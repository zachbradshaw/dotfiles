" ========== PLUGINS ==========
call plug#begin('~/.vim/plugged')

Plug 'morhetz/gruvbox'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'junegunn/fzf', { 'do': './install --bin' }
Plug 'junegunn/fzf.vim'
Plug 'sheerun/vim-polyglot'
Plug 'itchyny/lightline.vim'
Plug 'tpope/vim-vinegar'
Plug 'jiangmiao/auto-pairs'
Plug 'mhinz/vim-signify'
Plug 'tpope/vim-commentary'
Plug 'alvan/vim-closetag'

call plug#end()

" ========== MAPPINGS ==========
let mapleader=" "

" coc jump to definitions/references
nmap <leader>gd <Plug>(coc-definition)
nmap <leader>gr <Plug>(coc-references)

" split/tab navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
nnoremap <C-Left> :tabprevious<CR>
nnoremap <C-Right> :tabnext<CR>

" FZF
nnoremap <C-p> :GFiles<CR>

" ========== PLUGIN CONFIG ==========
" lightline
let g:lightline={
\   'colorscheme': 'gruvbox',
\   'active': {
\       'left': [ 
\           [ 'mode' ], 
\           [ 'gitbranch' ], 
\           [ 'filename' ] 
\       ],
\       'right': [ 
\           [ 'lineinfo' ], 
\       ]
\   },
\   'component_function': {
\       'filename': 'LightlineFilename'
\   }
\}

function! LightlineFilename()
    let cmd = '%:t'
    let filename = expand(cmd) !=# '' ? expand(cmd) : '[No Name]'
    return filename
endfunction

" vim signify 
let g:signify_sign_change = '~'

" fzf 
if (executable('ag'))
  let $FZF_DEFAULT_COMMAND = 'ag --hidden --ignore .git -g ""'
  let g:ackprg = 'ag --vimgrep'
endif

" closetag 
let g:closetag_filenames = '*.html,*.phtml,*.js,*.jsx,*.tsx'

" coc-prettier
command! -nargs=0 Prettier :CocCommand prettier.formatFile

" ========== DISPLAY ==========
syntax enable
colorscheme gruvbox
set number
set noerrorbells
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=4
set nowrap
set textwidth=0
set wrapmargin=0
set splitbelow
set splitright
set mouse=a
set ignorecase
set smartcase
set smartindent
set hlsearch
set incsearch
set laststatus=2
set noshowmode

"Use 24-bit (true-color) mode in Vim/Neovim when outside tmux.
"If you're using tmux version 2.2 or later, you can remove the outermost $TMUX check and use tmux's 24-bit color support
"(see < http://sunaku.github.io/tmux-24bit-color.html#usage > for more information.)
if (empty($TMUX))
  if (has("nvim"))
    "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
    let $NVIM_TUI_ENABLE_TRUE_COLOR=1
  endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
  if (has("termguicolors"))
    set termguicolors
  endif
endif
